---
interface Props {
  placeholderImgSrc: string
  fullImgSrc: string
  alt: string
}

const { alt, fullImgSrc, placeholderImgSrc } = Astro.props
---

<div
  class="w-full h-full bg-no-repeat [background-size:100%]"
  style={`background-image: url('${placeholderImgSrc}'); background-position: center;`}
>
  <img
    loading="lazy"
    src={fullImgSrc}
    alt={alt}
    class="enhanced-image w-full h-full object-contain opacity-0"
  />
</div>

<style>
  img.fully-loaded {
    animation: showImg 0.3s ease-in-out forwards;
  }

  @keyframes showImg {
    to {
      opacity: 1;
    }
  }
</style>

<script>
  const $images = document.querySelectorAll(
    "img.enhanced-image"
  ) as NodeListOf<HTMLImageElement>

  $images.forEach($img => {
    if (!$img) return

    function loadFullImage() {
      $img.classList.add("fully-loaded")
    }

    if ($img.complete) {
      loadFullImage()
    } else {
      $img.addEventListener("load", () => {
        loadFullImage()
      })
    }
  })
</script>

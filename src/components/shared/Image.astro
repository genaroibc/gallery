---
interface Props {
  placeholderImgSrc: string
  fullImgSrc: string
  alt: string
}

const { alt, fullImgSrc, placeholderImgSrc } = Astro.props
---

<div
  class="blurred-img-container"
  style={`background-image: url('${placeholderImgSrc}'); background-position: center;`}
>
  <img loading="lazy" src={fullImgSrc} alt={alt} class="w-full h-full" />
</div>

<style>
  img {
    object-fit: contain;
  }

  .blurred-img-container {
    width: 100%;
    height: 100%;
    background-repeat: no-repeat;
    background-size: 100%;
  }

  .blurred-img-container img {
    opacity: 0;
  }

  .blurred-img-container.full-img-loaded img {
    animation: showImg 0.3s ease-in-out forwards;
  }

  @keyframes showImg {
    to {
      opacity: 1;
    }
  }
</style>

<script>
  const $imgContainers = document.querySelectorAll(".blurred-img-container")

  $imgContainers.forEach($container => {
    const $img = $container.querySelector("img")

    if (!$img) return

    function loadFullImage() {
      $container.classList.add("full-img-loaded")
    }

    if ($img.complete) {
      loadFullImage()
    } else {
      $img.addEventListener("load", () => {
        loadFullImage()
      })
    }
  })
</script>
